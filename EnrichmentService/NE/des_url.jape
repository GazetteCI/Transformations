/*
*  
* Filename: 	des_url.jape
* Author:	Paul Appleby
* Description:	Annotates complete URLs and email addresses
* Date created:	05/03/2010
* This version:	0.7
* 
* 
* Change history
* ==========================================================================
* Date		Version		Author		Description
* ==========================================================================
* 
* 29/02/12	0.7		PA		Fix to email
* 01/10/10	0.6		PA		Fix to URL matching
* 15/09/10	0.5		PA		Adjusted orthographic matching
* 10/09/10	0.4		PA		Adjustment to sentence end handling
* 28/08/10	0.3		PA		Added in https
* 29/06/10	0.2		PA		Changed URL annotation to Link
*/


Phase:	Url
Input:  SpaceToken Token LineBreak
Options: control = appelt negationGrouping = false

Macro: URLSTART
(
	(
		(
			{Token.root == "https"} |
			{Token.root == "http"} |
			{Token.root == "ftp"}
		)
		{Token.string == ":"}
		{Token.string == "/"}
		{Token.string == "/"}
	) |
	(
		{Token.root == "www"}
		{Token.string == "."}
	)
)


Macro: URLEND
(
	{Token.kind == punctuation, Token.string == "/"} |
	{Token.kind == word} |
	{Token.kind == number}
)


Macro: SENTENCEPHRASEEND
(
	(
		{Token.kind == punctuation, Token.string == "."}
		(
			{SpaceToken} |
			{LineBreak}
		)
	) |
	{Token.kind == punctuation, Token.string == ","} |
	{Token.kind == punctuation, Token.string == ";"} |
	{Token.kind == punctuation, Token.string == ")"} | 
	{Token.kind == punctuation, Token.string == "]"} | 
	{SpaceToken.kind == control}
)


/* If the URL is immediately followed by a . or other punctuation we don't want to pick that up */
Rule: UrlAtSentenceEnd
Priority: 100
(
	(	
		(URLSTART)
		({Token})+
		(URLEND)
	):url
	(SENTENCEPHRASEEND)
)
-->
	:url.Link = {type = "url", rule = "URL1"}


Rule: UrlInMidSentence
Priority: 50
(
	(	
		(URLSTART)
		({Token, Token.string != ",", Token.string != ";", Token.string != ")", Token.string != "]"})+
		{Token, Token.string != ".", Token.string != ",", Token.string != ";", Token.string != ")", Token.string != "]"}
	):url
	(
		{SpaceToken} |
		{LineBreak}
	)?
)
-->
	:url.Link = {type = "url", rule = "URL2"}


Rule:Emailaddress
(
	(
		{Token.kind == word} |
		{Token.kind == number} |
		{Token.string == "_"}
	)
	(
		{Token.string == "."}
		(
			{Token.kind == word} |
			{Token.kind == number} |
			{Token.string == "_"}
		)
	)*
	{Token.string == "@"}		
	(
		{Token.kind == word} |
		{Token.kind == symbol, Token.string != "@"} |
		{Token.kind == punctuation, Token.string != "@"} |
		{Token.kind == number}
	)
	(
		({Token.string == "."})?
		(
			{Token.kind == word} |
			{Token.kind == symbol, Token.string != "@"} |
			{Token.kind == punctuation, Token.string != "@"} |
			{Token.kind == number}
		)
	)[0,5]
	(
		{Token.string == "."}
		{Token.kind == word}
	)
)
:emailAddress -->
	:emailAddress.Link = {type = "email", rule = "Email"}
